#!/bin/bash

usage()
{
    echo "rde -r <root> -v <working-dir1>[:<mapping-dir1>] -v <working_dir2>:[<mapping-dir2>] <other docker args> ..."
    exit 1
}

IMAGE="rde"
WORKING_DIRS=()
# Other arguments are passed over to docker container directly
OTHERS=()
HOSTNAME="timeplus"

while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        -r|--root)
            ROOT="$2"
            shift
            shift
            ;;
        -v|--volume)
            WORKING_DIRS+=("$2")
            shift
            shift
            ;;
        -i|--image)
            IMAGE="$2"
            shift
            shift
            ;;
        -h|--hostname)
            HOSTNAME="$2"
            shift
            shift
            ;;
        -*)
            OTHERS+=("$1")
            OTHERS+=("$2")
            shift
            shift
            ;;
        *)
            usage
    esac
done

# Construct docker commnd
docker_cli="docker run"

if [[ ! -z  "$ROOT" && -d "$ROOT" ]]; then
    echo "Mapping $ROOT to /root"
    docker_cli="${docker_cli} -v ${ROOT}:/root"
fi

for w in "${WORKING_DIRS[@]}"
do
    IFS=':' read -ra WORKING_DIR_MAP <<< "$w"
    w="${WORKING_DIR_MAP[0]}"
    if [[ -d "$w" ]]; then
        len="${#WORKING_DIR_MAP[@]}"
        if [[ $len -eq 2 ]]; then
            target_dir="${WORKING_DIR_MAP[1]}"
        else
            target_dir=`basename $w`
            target_dir="/${target_dir}"
        fi

        echo "Mapping $w to $target_dir"
        docker_cli="${docker_cli} -v ${w}:$target_dir"
    fi
done

# Setup ccache
mkdir -p $HOME/.ccache
CCACHE="--mount=type=bind,source=$HOME/.ccache,destination=/ccache -e CCACHE_DIR=/ccache"

docker_cli="${docker_cli} -w /root ${OTHERS[@]} --network=host --cap-add=sys_nice --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --hostname ${HOSTNAME} ${CCACHE} -it ${IMAGE}"
echo "Running ${docker_cli}"

exec $docker_cli
